on: push
jobs:
  default:
    strategy:
      matrix:
        os:
          - windows-2022
          - ubuntu-20.04
          - macos-11
          - macos-12-arm
        include:
          - os: windows-2022
            osimage: windows-2022
            exename: cs2mmd.exe
            runtime: win-x64
          - os: ubuntu-20.04
            osimage: ubuntu-20.04
            exename: cs2mmd
            runtime: linux-x64
          - os: macos-11
            osimage: macos-11
            exename: cs2mmd
            runtime: osx-x64
          - os: macos-12-arm
            osimage: macos-11
            exename: cs2mmd
            runtime: osx.12-arm64
    runs-on: ${{ matrix.osimage }}
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-dotnet@v2
        name: "setup dotnet"
        with:
          dotnet-version: "6.0.x"
      - run: "pwsh ./build.ps1 --target Test --configuration Release"
        name: "running test suite"
      - name: "build nuget package"
        run: "pwsh ./build.ps1 --target Pack --configuration Release"
        if: ${{ matrix.os == 'windows-2022' }}
      - name: "build tgz binary"
        run: "pwsh ./build.ps1 --target ArchiveTgz --configuration Release --runtime ${{ matrix.runtime }}"
        if: ${{ matrix.os != 'windows-2022'}}
      - name: "build zip binary"
        run: "pwsh ./build.ps1 --target ArchiveZip --configuration Release --runtime ${{ matrix.runtime }}"
        if: ${{ matrix.os == 'windows-2022'}}
      - name: "collect nupkg"
        uses: actions/upload-artifact@v3
        with:
          name: nupkg
          path: |
            artifacts/Release/Any/cs2mmd.*.nupkg
            artifacts/Release/Any/cs2mmd.*.snupkg
        if: ${{ matrix.os == 'windows-2022' }}
      - name: "collect tgz binary"
        uses: actions/upload-artifact@v3
        with:
          name: "tgz-${{ matrix.runtime }}"
          path: "artifacts/archive/Release/${{ matrix.runtime }}/*.tgz"
        if: ${{ matrix.os != 'windows-2022' }}
      - name: "collect zip binary"
        uses: actions/upload-artifact@v3
        with:
          name: "zip-${{ matrix.runtime }}"
          path: "artifacts/archive/Release/${{ matrix.runtime }}/*.zip"
        if: ${{ matrix.os == 'windows-2022' }}
